#########################################################################################################
#########################################################################################################
#########################################################################################################
#########################################################################################################
#########################################################################################################
#
# configuration file for TV-ENGINE since version = 3.6.X (!!!)
# 
# @since TVE-3.6.X
# 
# @version 2.0 (last modifying at 2014-11-06 by Alexander Babin)
# 
#########################################################################################################
#########################################################################################################
#########################################################################################################
#########################################################################################################
#########################################################################################################

#########################################################################################################
# 1. BILLING INTEGRATION
#########################################################################################################

#--------------------------------------------------------------------------------------------------------
# 1.1 Billing type
#--------------------------------------------------------------------------------------------------------
# type of billing system: 
# db - internal billing
# ws - external billing through web-services
# cti - CTI-BILLING
# fastcom - FASTCOM-billing
tve.billing.type=db

#--------------------------------------------------------------------------------------------------------
# 1.2 External interaction
#--------------------------------------------------------------------------------------------------------
# allows to select OrderManagementService implementation type  (available values:  db , ws, cti, fastcom)
tve.billing.external.orderManagementService.type=db
# external billing realization for "askPermissionToActivateOnBilling" method
# (using during set top box registration operation)
tve.billing.external.customerManagementService.askPermissionToActivateOnBilling.type=db
# common  implementation for BillingManagementService
tve.billing.external.billingManagementService.type=db
# allows to select  BillingManagementService implementation type for 'queryCustomerAccountInfo' method only  (available values:  db , ws, cti, fastcom)
tve.billing.external.billingManagementService.queryCustomerAccountInfo.type=db
# allows to select  BillingManagementService implementation type for 'queryBillingEntries' method only  (available values:  db , ws, cti, fastcom)
tve.billing.external.billingManagementService.queryBillingEntries.type=db
# allows to select  BillingManagementService implementation type for 'querySummByService' method only  (available values:  db , ws, cti, fastcom)
tve.billing.external.billingManagementService.querySummByService.type=db

#--------------------------------------------------------------------------------------------------------
# 1.3 Internal interaction
#--------------------------------------------------------------------------------------------------------
# create CDR during addService operation
tve.billing.internal.serviceManagementServiceWS.createCdrDuringAddService=false

#--------------------------------------------------------------------------------------------------------
# 1.4 WS billing adapter
#--------------------------------------------------------------------------------------------------------

#--------------------------------------------------------------------------------------------------------
# 1.4.1 WS SINGLE mode
#--------------------------------------------------------------------------------------------------------
# End-point for PricingService
billadapter.pull.pricingservice=http://127.0.0.1:8080/billadmin-stub-billing-adapter-ws-stub/PricingServiceWS?wsdl
# End-point for OrderService
billadapter.pull.orderservice=http://127.0.0.1:8080/billadmin-stub-billing-adapter-ws-stub/OrderManagementServiceWS?wsdl
# End-point for BillingService
billadapter.pull.billingservice=http://172.20.1.242:8080/billadmin-billing-adapter-ws/BillingServiceWS?wsdl
# End-point for ServiceService
billadapter.pull.serviceservice=http://127.0.0.1:8080/billadmin-stub-billing-adapter-ws-stub/ServiceManagementServiceWS?wsdl
# End-point for CustomerService
billadapter.pull.customerservice=http://127.0.0.1:8080/billadmin-stub-billing-adapter-ws-stub/ServiceManagementServiceWS?wsdl

#--------------------------------------------------------------------------------------------------------
# 1.4.2 WS MULTIBILLING mode
#--------------------------------------------------------------------------------------------------------
# true value switch on multibilling mode.  
billadapter.pull.multiBillingsModeEnabled=false
# billing names comma-separated. Used in multibilling mode
billadapter.pull.billings=bill1,bill2
# Prefix size. Used in multibilling mode
billadapter.pull.prefixSize=1
# Remote address for every billing, mentioned in 'billadapter.pull.billings' parameter. Used in multibilling mode
billadapter.pull.remoteaddr.bill1=172.20.1.1
# Prefix value for every billing, mentioned in 'billadapter.pull.billings'. Used in multibilling mode
billadapter.pull.prefix.bill1=1
# End-point for PricingService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.pricingservice.bill1=http://172.20.1.1/wsdl/external/PricingServiceWS.wsdl
# End-point for OrderService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.orderservice.bill1=http://172.20.1.1:8080/billadmin-billing-adapter-ws/OrderManagementServiceWS?wsdl
# End-point for BillingService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.billingservice.bill1=http://172.20.1.1/wsdl/external/BillingServiceWS.wsdl
# End-point for ServiceService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.serviceservice.bill1=http://127.0.0.1:8080/billadmin-stub-billing-adapter-ws-stub/ServiceManagementServiceWS?wsdl
# End-point for CustomerService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.customerservice.bill1=http://127.0.0.1:8080/billadmin-stub-billing-adapter-ws-stub/ServiceManagementServiceWS?wsdl
# Remote address for every billing, mentioned in 'billadapter.pull.billings' parameter. Used in multibilling mode
billadapter.pull.remoteaddr.bill2=172.20.1.139
# Prefix value for every billing, mentioned in 'billadapter.pull.billings'. Used in multibilling mode
billadapter.pull.prefix.bill2=2
# End-point for PricingService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.pricingservice.bill2=http://172.20.1.139:8080/billadmin-billing-adapter-ws/BillingServiceWS?wsdl
# End-point for OrderService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.orderservice.bill2=http://172.20.1.139:8080/billadmin-billing-adapter-ws/OrderManagementServiceWS?wsdl
# End-point for BillingService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.billingservice.bill2=http://172.20.1.1/wsdl/external/BillingServiceWS.wsdl
# End-point for ServiceService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.serviceservice.bill2=http://172.20.1.139:8080/billadmin-stub-billing-adapter-ws-stub/ServiceManagementServiceWS?wsdl
# End-point for CustomerService for particular billng (mentioned in 'billadapter.pull.billings' parameter). 
billadapter.pull.customerservice.bill2=http://172.20.1.139:8080/billadmin-stub-billing-adapter-ws-stub/ServiceManagementServiceWS?wsdl

#--------------------------------------------------------------------------------------------------------
# 1.4.3 WS common parameters
#--------------------------------------------------------------------------------------------------------
# true value swith on sending notification to billng when acount status changed in TVE
billadapter.sendChangeCustomerAccountStatusToBilling=false

#--------------------------------------------------------------------------------------------------------
# 1.5 FASTCOM billing adapter
#--------------------------------------------------------------------------------------------------------

#--------------------------------------------------------------------------------------------------------
# 1.5.1 FASTCOM synchronization service
#--------------------------------------------------------------------------------------------------------
# synchronization accounts URL
tve.fastcom.syncronization.account.url=http://localhost:8800/fastcom/setTopBox/activation/loadXML
# timeout for lock queries on billing server, if server is unavailable (seconds). Default : 10 min (used by FASTCOM)
common.connection.billing.lockServerTimeout=600
# accounts synchronization template
tve.fastcom.syncronization.account.template=account.ftl
# Service execution period(ms), every 5min (CRON expression)
tve.fastcom.syncronization.account.cronExpression = 0 0/5 * * * ?
# delegate class used for cluster scheduler. This value depends on DB type:
# POSTGRESQL : org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
# ORACLE     : org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# MSSQL      : org.quartz.impl.jdbcjobstore.MSSQLDelegate
tve.fastcom.syncronization.account.delegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
# lockHandlerClass parameter used only by MSSQL actually.
# POSTGRESQL : (empty)
# ORACLE     : (empty)
# MSSQL      : org.quartz.impl.jdbcjobstore.StdRowLockSemaphore
tve.fastcom.syncronization.schedule.lockHandlerClass=
# selectWithoutLockSQL parameter used only by MSSQL actually.
# POSTGRESQL : (empty)
# ORACLE     : (empty)
# MSSQL      : SELECT LOCK_NAME FROM {0}LOCKS WITH (ROWLOCK, UPDLOCK) WHERE LOCK_NAME=?
tve.fastcom.syncronization.schedule.selectWithLockSQL=

#--------------------------------------------------------------------------------------------------------
# 1.5.2 FASTCOM request settings
#--------------------------------------------------------------------------------------------------------
# URL for requests
tve.fastcom.external.url=http://localhost:8800/fastcom/loadXML
# activationSetTopBox operation template
tve.fastcom.external.request.activationSetTopBox.template=activationSetTopBox.ftl
# changeAccount operation template
tve.fastcom.external.request.changeAccount.template=changeAccount.ftl
# changeServiceStatus operation template
tve.fastcom.external.request.changeServiceStatus.template=changeServiceStatus.ftl
# findService operation template
tve.fastcom.external.request.findService.template=findService.ftl
# findPrice operation template
tve.fastcom.external.request.findPrice.template=findPrice.ftl
# addServiceUsage operation template
tve.fastcom.external.request.addServiceUsage.template=addServiceUsage.ftl
# getAccount operation template
tve.fastcom.external.request.getAccount.template=getAccount.ftl

#--------------------------------------------------------------------------------------------------------
# 1.6 CTI-BILLING billing adapter
#--------------------------------------------------------------------------------------------------------
# Enable TVE <-> CTI billing synchronization service
tve.ctiBilling.ctiBillingSyncService.enabled = false
# service iteration timeout (ms) Default - 60 sec
# service iteration timeout in ms, big value needs for disable start of service! 
tve.ctiBilling.ctiBillingSyncService.loadTimeout = 31536000000
# delay before start service in seconds, big value needs for disable start of service! 
# for enable service set tve.ctiBilling.ctiBillingSyncService.enable in true and
# tve.ctiBilling.ctiBillingSyncService.startDelay in 120000
tve.ctiBilling.ctiBillingSyncService.startDelay = 31536000000

#--------------------------------------------------------------------------------------------------------
# 1.7 Common billing parameters
#--------------------------------------------------------------------------------------------------------
# default value for VOD portal menu item when customer DOES NOT HAVE any tariff plan
customer.tariffPlan.ifNotExists.vodEnabled=false
# default value for BTV portal menu item when customer DOES NOT HAVE any tariff plan
customer.tariffPlan.ifNotExists.btvEnabled=true
# default value for SETTINGS portal menu item when customer DOES NOT HAVE any tariff plan
customer.tariffPlan.ifNotExists.settingsEnabled=true
# default value for SERVICES portal menu item when customer DOES NOT HAVE any tariff plan
customer.tariffPlan.ifNotExists.servicesEnabled=true
# Default value for tariff plan specification property: portal SERVICES. It is used during adding tariff plan specification from billing API (as default value)
tve.billing.tariffPlanSpecification.servicesEnabled=false
# Default value for tariff plan specification property: portal SETTINGS. It is used during adding tariff plan specification from billing API (as default value)
tve.billing.tariffPlanSpecification.settingsEnabled=false
# Default value for tariff plan specification property: portal VOD. It is used during adding tariff plan specification from billing API (as default value)
tve.billing.tariffPlanSpecification.vodEnabled=false
# Enable TSTV service for all users independent from billing
TstvService.enabled=true
# Enable PLTV service for all users independent from billing
PltvService.enabled=true
# Default age rating for new profile created by billing system
common.customerAccount.defaultAgeRatingLevel=1
# If value=true for new profiles created by billing system enabled buy option
common.customerAccount.optionOnCreate.allowbuy=true
# If value=true for new profiles created by billing system enabled ask pin for purchese option
common.customerAccount.optionOnCreate.askpin=true
# If value=true for new profiles created by billing system enabled block channel option.
common.customerAccount.optionOnCreate.allowblock=true
# Default locale for new profiles created by billing system.Format : <language>_<country>
common.customerAccount.defaultLocale=ru_RU
# always, never, sometimes
common.customerAccount.optionOnCreate.pinSelectedOption=always
# getting customer status from billing during stb authentication process (default - FALSE)
tve.billing.needGetDataFromBillingDuringStbAuthentication=false
# true value swith on using new statuses schema (from TVE-3.4) 
billadapter.useNewCustomerAccountStatus=true

#########################################################################################################
# 2. PORTAL FACADE NG SERVICES
#########################################################################################################

#--------------------------------------------------------------------------------------------------------
# 2.1 CDR service (export detail records to CDR-files)
#--------------------------------------------------------------------------------------------------------
# enable or disable service (default - false)
tve.cdrService.enabled=true
# service starting initial timeout  (ms) Default - 5 minutes
tve.cdrService.initialTimeout=300000
# service iteration timeout (ms) Default - 5 minutes
tve.cdrService.iterationTimeout=300000
# output folder for CDR-files. Default - /opt/export
tve.cdrService.outputFolder=/opt/export
# page size for cdr
tve.cdrService.pageSize=500

#--------------------------------------------------------------------------------------------------------
# 2.2 PROLONGATION service (this one is used for prolongate periodical TVE services)
#--------------------------------------------------------------------------------------------------------
# Enable service
tve.prolongationService.enabled = true
# Interval for first service iteration (ms)
tve.prolongationService.initialTimeout = 600000
# Iteration interval (ms)
tve.prolongationService.iterationTimeout = 1800000
# Max interval to TVE customer service expiration, when customer service will be prolongate (ms or using 'h','d')
tve.prolongationService.prematureTimeout = 6h
# Min interval from expired customer service to current moment, when customer service will NOT be prolongate (ms or using 'h','d')
tve.prolongationService.maxExpiredTimeout = 4d
# Need notify billing during service prolongation process
tve.prolongationService.notifyBillingDuringProlongation=true
# Items count for every transaction
tve.prolongationService.pageSize=500

#--------------------------------------------------------------------------------------------------------
# 2.3 DB-CLEANER service (used for delete all expired data from database)
#--------------------------------------------------------------------------------------------------------
# true value switch on cleaner service. WARNING: disabling this service bring system performance degradation
tve.dbCleanerService.enabled=true
# Service execution period (ms)
tve.dbCleanerService.loadTimeout=86400000
# expiration timeout for epg, by default 2 days
tve.dbCleanerService.expirationTimeout=2d
# expiration timeout for account service entities. By default - 180d
# If value is 0 - remove entities is disabled.
tve.dbCleanerService.accountServiceExpirationTimeout=180d
# expiration timeout for detail record entities. By default - 180d
# If value is 0 - remove entities is disabled.
tve.dbCleanerService.detailRecordExpirationTimeout=180d
# expiration timeout for vod record log entities. By default - 180d
# If value is 0 - remove entities is disabled.
tve.dbCleanerService.cryptDetailRecordExpirationTimeout=180d
# packet size. By default - 1000
tve.dbCleanerService.packetSize=1000
# expiration timeout for message service entities. By default - 30d
tve.dbCleanerService.messageExpirationTimeout=30d
